name: Publish to Packagist and GitHub

on:
  push:
    branches:
      - main

permissions:
  contents: write  # For creating releases and tags
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     php: [7.4, 8.0, 8.1, 8.2, 8.3]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, posix, session, simplexml, tokenizer, xml, xmlreader, xmlwriter, zip
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      # - name: Run PHPStan
      #   run: composer run phpstan

      # - name: Run CodeSniffer
      #   run: composer run cs

      - name: Run tests
        run: composer run test

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, posix, session, simplexml, tokenizer, xml, xmlreader, xmlwriter, zip

      - name: Get version from composer.json
        id: get_version
        run: |
          VERSION=$(php -r "echo json_decode(file_get_contents('composer.json'), true)['version'];")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Update Composer
        run: composer update
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create and push tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a v${{ env.VERSION }} -m "Release v${{ env.VERSION }}"
          git push origin v${{ env.VERSION }}

      - name: Build package
        run: composer run build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          files: |
            composer.json
            composer.lock
            src/**
            README.md
            LICENSE
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Packagist
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.PACKAGIST_USERNAME }}:${{ secrets.PACKAGIST_TOKEN }}" \
            https://packagist.org/api/create-package \
            -d '{"repository": "https://github.com/${{ github.repository }}"}'

      # - name: Publish to Packagist
      #   run: |
      #     curl -X POST \
      #       -H "Content-Type: application/json" \
      #       -H "Authorization: Bearer ${{ secrets.PACKAGIST_TOKEN }}" \
      #       https://packagist.org/api/update-package?username=${{ secrets.PACKAGIST_USERNAME }} \
      #       -d '{"repository":{"url":"https://github.com/${{ github.repository }}"}}' 
